execute(mulw)
{
	uint32 rs1 = read_gpr(inst.rs1);
	uint32 rs2 = read_gpr(inst.rs2);
	
	sint32 result = rs1 * rs2;
	
	write_register_bank(GPR, inst.rd, (typename sword_t)result);
}

execute(divw)
{
	sint32 rs1 = read_gpr(inst.rs1);
	sint32 rs2 = read_gpr(inst.rs2);
	
	sint32 result = rs1 / rs2;
	
	write_register_bank(GPR, inst.rd, (typename sword_t)result);
}

execute(divuw)
{
	uint32 rs1 = read_gpr(inst.rs1);
	uint32 rs2 = read_gpr(inst.rs2);
	
	uint32 result = rs1 / rs2;
	
	write_register_bank(GPR, inst.rd, (typename word_t)result);
}

execute(remw)
{
	sint32 rs1 = read_gpr(inst.rs1);
	sint32 rs2 = read_gpr(inst.rs2);
	
	sint32 result = rs1 % rs2;
	
	write_register_bank(GPR, inst.rd, (typename sword_t)result);
}

execute(remuw)
{
	uint32 rs1 = read_gpr(inst.rs1);
	uint32 rs2 = read_gpr(inst.rs2);
	
	sint32 result = rs1 % rs2;
	
	write_register_bank(GPR, inst.rd, (typename sword_t)result);
}
